language: php

os:
  - linux

cache:
  directories:
    - $HOME/.composer/cache/files

env:
  global:
    - PHPUNIT_FLAGS="-v"
    - COVERAGE=false
    - FULL_CHECK=false
    - SYMFONY_LTS3=false
    - SYMFONY_LTS4=false

php:
  - '7.1'
  - '7.2'
  - '7.3'
  - nightly

matrix:
  fast_finish: true
  include:
    # Test the latest stable release building coverage and performing all checks
    - php: '7.3'
      env: COVERAGE=true PHPUNIT_FLAGS="-v --coverage-clover=coverage.xml" FULL_CHECK=true

    # Minimum supported dependencies with the latest and oldest PHP version
    - php: '7.1'
      env: COMPOSER_FLAGS="--prefer-stable --prefer-lowest"
    - php: '7.2'
      env: COMPOSER_FLAGS="--prefer-stable --prefer-lowest"
    - php: '7.3'
      env: COMPOSER_FLAGS="--prefer-stable --prefer-lowest"
    - php: 'nightly'
      env: COMPOSER_FLAGS="--prefer-stable --prefer-lowest"

    # Test LTS versions.
    # This makes sure we do not use Symfony packages with version greater than 3 or 4 respectively.
    # Read more at https://github.com/symfony/lts
    - php: '7.1'
      env: SYMFONY_LTS3="symfony/lts:^3"
    - php: '7.2'
      env: SYMFONY_LTS3="symfony/lts:^3"
    - php: '7.3'
      env: SYMFONY_LTS3="symfony/lts:^3"
    - php: 'nightly'
      env: SYMFONY_LTS3="symfony/lts:^3"
    - php: '7.1'
      env: SYMFONY_LTS4="~4.2.0"
    - php: '7.2'
      env: SYMFONY_LTS4="~4.2.0"
    - php: '7.3'
      env: SYMFONY_LTS4="~4.2.0"
    - php: 'nightly'
      env: SYMFONY_LTS4="~4.2.0"

    # Latest commit to master
    - php: '7.1'
      env: STABILITY="dev"
    - php: '7.2'
      env: STABILITY="dev"
    - php: '7.3'
      env: STABILITY="dev"
    - php: 'nightly'
      env: STABILITY="dev"
  allow_failures:
    - php: 'nightly'

before_install:
  # Always install ast as it is required in Composer json.
  - pecl channel-update pecl.php.net
  - pecl install ast-1.0.1
  - if [[ $COVERAGE != true ]]; then phpenv config-rm xdebug.ini || true; fi;
  - if ! [ -z "$STABILITY" ]; then composer config minimum-stability ${STABILITY}; fi;
  #- if ! [ -z "$SYMFONY_LTS" ]; then composer require symfony/flex; fi;
  #- if ! [ -z "$SYMFONY_LTS" ]; then composer config extra.symfony.require "${SYMFONY_LTS}"; fi;
  - if [[$SYMFONY_LTS4 != false ]]; then composer require symfony/flex; fi;
  - if [[$SYMFONY_LTS4 != false ]]; then composer config extra.symfony.require "${SYMFONY_LTS4}"; fi;
  - if [[$SYMFONY_LTS3 != false ]]; then composer require --no-update ${SYMFONY_LTS3}; fi;

install:
  - composer update ${COMPOSER_FLAGS} --prefer-dist

script:
  # Check Rector and style fixes
  - if [[ $FULL_CHECK == true ]]; then ./vendor/bin/rector process src --dry-run; fi
  - if [[ $FULL_CHECK == true ]]; then ./vendor/bin/php-cs-fixer fix --allow-risky yes --dry-run -v; fi
  - if [[ $FULL_CHECK == true ]]; then ./vendor/bin/phpunit ${PHPUNIT_FLAGS}; fi
  # Static analysis
  - ./vendor/bin/phpstan analyse src -c phpstan.neon --level max
  - ./vendor/bin/phan --progress-bar --minimum-severity max
  - ./vendor/bin/psalm
  # Check for security issues
  - if [[ $FULL_CHECK == true ]]; then ./vendor/bin/security-checker security:check; fi

after_success:
  - if [[ $COVERAGE == true ]]; then bash <(curl -s https://codecov.io/bash); fi;
